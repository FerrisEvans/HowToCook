# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

## Build generated
build/
.build/
DerivedData

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output




## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata

## Other
*.xccheckout
*.moved-aside
*.xcuserstate
*.xcscmblueprint
default.profraw

## Obj-C/Swift specific
*.hmap
*.ipa

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# http://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
#Pods/

HowToCook.xcodeproj
HowToCook.pkg
*.zip
benchmark_*
osscheck/
docs/
rule_docs/
bazel.tar.gz
bazel.tar.gz.sha256
ci.bazelrc
user.bazelrc

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
Packages/
.build/
.swiftpm/

# macOS
.DS_Store

# Bundler
.bundle/
bundle/

# Bazel
bazel-*
/MODULE.bazel.lock

# Merge files
*.orig

# Binaries
*.dylib
*.a
*.o
*.d
*.libdeps
*.zip
*.realm
!examples/ios/swift/Migration/RealmTemplates/*.realm
!examples/ios/objc/Migration/RealmTemplates/*.realm
*.realm.lock

# core
core
core-*
realm-core-*-xcframework

# sh build.sh test
build/


# sh build.sh cocoapods-setup
/include

# sh build.sh docs
/docs/objc_output
/docs/swift_output
/Realm/RLMPlatform.h

# XCode
*.bak
xcuserdata/
project.xcworkspace
*.xccheckout
DerivedData
/.build

# AppCode
.idea/
*.iml
# backup and crash files
*.swp

# xcpretty
build.log

# ruby
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/test/tmp/
/test/version_tmp/
/tmp/

## Carthage
# Cartfiles are ignored because they're generated on demand in the installation examples
Cartfile
Carthage

## Swift Version
SwiftVersion.swift

examples/ios/objc/Draw/Constants.h

## Sync testing
/ci_scripts/setup_baas/.baas

## Swiftpm
.swiftpm
.build
Package.resolved
